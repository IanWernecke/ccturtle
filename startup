#!/bin/lua


function print_system_status()
    -- print the current system label, version, fuel level, and time

    local label = os.getComputerLabel()
    if label == nil then
        label = ""
    end

    print("Label: " .. label)
    print("Version: " .. os.version())
    if turtle then
        current = turtle.getFuelLevel()
        maximum = turtle.getFuelLimit()
        print("Fuel: " .. (current / maximum * 100) .. "%  (" .. current .. " / " .. maximum .. ")")
    end
    print("Time: " .. os.day() .. 'T' .. os.time())

end


-- load apis to be used by a turtle
function load_turtle_apis()

  -- simple api loads
  -- requires: nil
  os.loadAPI("/apis/arg.lua")
  os.loadAPI("/apis/opt.lua")
  os.loadAPI("/apis/common.lua")

  os.loadAPI("/apis/bore.lua")
  os.loadAPI("/apis/clear.lua")
  os.loadAPI("/apis/con.lua")
  os.loadAPI("/apis/describe.lua")
  os.loadAPI("/apis/detect.lua")
  os.loadAPI("/apis/inventory.lua")
  os.loadAPI("/apis/match.lua")
  os.loadAPI("/apis/ore.lua")
  os.loadAPI("/apis/seek.lua")
  os.loadAPI("/apis/slide.lua")

  -- requires: opt
  os.loadAPI("/apis/dig.lua")
  os.loadAPI("/apis/move.lua")
  os.loadAPI("/apis/turn.lua")

  -- requires: inventory
  os.loadAPI("/apis/place.lua")

  -- requires: dig, move, place
  os.loadAPI("/apis/builder.lua")

  -- requires: bore, move
  os.loadAPI("/apis/punch.lua")

  -- requires: detect, dig, punch
  os.loadAPI("/apis/cleft.lua")

  -- requires: place, seek
  os.loadAPI("/apis/fill.lua")

  -- requires: dig, match, opt
  os.loadAPI("/apis/mine.lua")

  -- requires: seek, match, dig, place, move
  -- os.loadAPI("/apis/replace.lua")

  -- if the turtle can craft, load the recipes api
  if turtle.craft then
    os.loadAPI("/apis/recipes.lua")
  end

end


-- print the system status and load any required apis
print_system_status()
if turtle then
    load_turtle_apis()
end
