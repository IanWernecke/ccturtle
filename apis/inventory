#!/bin/lua


-- function: contains
-- param string_id: the name of the block to search for in inventory
-- return: boolean
function contains(string_id)

    return find(string_id) ~= nil

end


-- count all of the items in the inventory
-- with a given string id or all if string_id
-- is nil
function count(string_id)

    local data
    local total = 0
    for i = 1,16 do
        if string_id == nil then
            total = total + turtle.getItemCount(i)
        else
            data = turtle.getItemDetail(i)
            if data ~= nil and data.name == string_id then
                total = total + data.count
            end
        end
    end
    return total

end


-- function: current
-- return: the string id of the currently selected item
function current()

    local data = turtle.getItemDetail()
    if data then
        return data.name
    else
        return nil
    end

end


-- function: drop
-- param slot: the slot number to drop forward
-- return: bool success
function drop(slot, turtle_drop)

  -- set the default drop direction to forwards
  turtle_drop = opt.get(turtle_drop, turtle.drop)

  -- if a slot was given, drop only that one and return
  if slot ~= nil then return turtle_drop(slot) end

  -- store this for later
  starting_slot = turtle.getSelectedSlot()

  -- drop all of the items in the inventory
  for slot = 1, 16 do
    data = turtle.getItemDetail(slot)
    if data ~= nil then
      turtle.select(slot)
      turtle_drop()
    end
  end

  -- select the original slot and return true
  turtle.select(starting_slot)
  return true

end


-- function: find
-- param string_id: the name of an item to seek
-- return: a slot number that matches the string_id
function find(string_id)

    assert(string_id, 'string_id must be given')

    -- search for an item that matches a given string_id
    local data
    for i=1,16 do
        data = turtle.getItemDetail(i)
        if data ~= nil and data.name == string_id then
            return i
        end
    end
    return nil

end


-- function: first
-- return: returns the first inventory slot with items in it
function first()

    for i=1,16 do
        if 0 < turtle.getItemCount(i) then
            return i
        end
    end

    error("Unable to find any items in inventory")

end


-- select the first available item that matches
-- the given string id, or the first stack
-- with items if string_id is nil
function select(string_id)

    assert(string_id, 'string_id must be given')

    local i = find(string_id)
    if i == nil then
        return false
    end

    turtle.select(i)
    return true

end
