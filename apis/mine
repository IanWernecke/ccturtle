#!/bin/lua


-- mine all blocks that match the given block id
-- TODO: determine a fix for java exception error after
-- arbitrary limit of 256 recursion
-- error: java.lang.ArrayIndexOutOfBoundsException
function vein(block)

    -- throw an error if the block name is not passed
    if block == nil then
        error("Block is nil.")
    end

    local count = 0

    -- up
    -- checking up first should mean that we float first and
    -- encounter fewer recursion errors, probably
    if turtle.detectUp() and match.up(block) then
        dig.up()
        count = count + vein(block) + 1
        turtle.down()
    end

    -- down
    -- hoping that checking down second also cuts down on
    -- recursion count, since top and bottom of spheres
    -- should have a smaller count
    if turtle.detectDown() and match.down(block) then
        dig.down()
        count = count + vein(block) + 1
        turtle.up()
    end 

    -- loop and look in all four directions
    for i=1,4 do
        if turtle.detect() and match.forward(block) then
            dig.forward()
            count = count + vein(block) + 1
            turtle.back()
        end
        turtle.turnLeft()
    end

    return count

end


